@model Framework.ViewModels.PostViewModel

<div class="header-spacer"></div>

<div class="container">
    <div class="row">
        <!-- Main Content -->
        <main class="col-xl-9 col-lg-12 push-lg-0 col-md-12 col-sm-12 col-xs-12">
            <div id="newsfeed-items-grid">

                <div class="ui-block" id="@Model.Id">
                    <article class="hentry post">
                        <div class="post__author author vcard inline-items @Model.Degree">
                            <a href="Profile?username=@Model.UserName&option=newsfeed">
                                <img src="content/images/@Model.Avatar" alt="author">
                            </a>

                            <div class="author-date">
                                <a class="h6 post__author-name fn" href="Profile?username=@Model.UserName&option=newsfeed">@Model.Name</a>
                                <div class="post__date">
                                    <time class="published" data-time="@Model.DatePost">
                                    </time>
                                </div>
                            </div>
                            <div class="more">
                                <svg class="olymp-three-dots-icon"><use xlink:href="content/icons/icons.svg#olymp-three-dots-icon"></use></svg>
                                <div class="more-dropdown">
                                    <a href="#" data-toggle="modal" data-target="#report">Báo cáo xấu</a>
                                </div>
                            </div>
                        </div>

                        <h6 class="tag">
                            Thể loại: <span>@Model.TypeToString</span>
                        </h6>
                        <p>
                            @Model.Content
                        </p>

                        <div class="post-additional-info inline-items">
                            @if (Model.Vote == 1)
                            {
                                <a href="#" class="post-add-icon inline-items upvote active clicked">
                                    <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                    <span>@Model.UpVote</span>
                                </a>
                                <a href="#" class="post-add-icon inline-items downvote">
                                    <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                    <span>@Model.DownVote</span>
                                </a>
                            }
                            else if (Model.Vote == -1)
                            {
                                <a href="#" class="post-add-icon inline-items upvote">
                                    <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                    <span>@Model.UpVote</span>
                                </a>
                                <a href="#" class="post-add-icon inline-items downvote active clicked">
                                    <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                    <span>@Model.DownVote</span>
                                </a>
                            }
                            else
                            {
                                <a href="#" class="post-add-icon inline-items upvote">
                                    <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                    <span>@Model.UpVote</span>
                                </a>
                                <a href="#" class="post-add-icon inline-items downvote">
                                    <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                    <span>@Model.DownVote</span>
                                </a>
                            }

                            <div class="comments-shared">
                                <div class="post-add-icon inline-items">
                                    <svg class="olymp-speech-balloon-icon"><use xlink:href="content/icons/icons.svg#olymp-speech-balloon-icon"></use></svg>
                                    <span>@Model.Comment</span>
                                </div>
                            </div>
                        </div>

                    </article>

                    <div class="comment-section">
                        <ul class="comments-list">
                            @foreach (var commentParent in Model.listComment)
                            {
                                string id = "p" + commentParent.Id_Post + "c-" + commentParent.Id;
                                if (commentParent.listChildComment.Count != 0)
                                {
                                    if (commentParent.Corrected)
                                    {
                                        @Html.Raw("<li class='has-children parent lazy-show not-showed answer' id='" + id + "'>")
                                    }
                                    else
                                    {
                                        @Html.Raw("<li class='has-children parent lazy-show not-showed' id='" + id + "'>")
                                    }
                                }
                                else
                                {
                                    if (commentParent.Corrected)
                                    {
                                        @Html.Raw("<li class='parent lazy-show not-showed answer' id='" + id + "'>")
                                    }
                                    else
                                    {
                                        @Html.Raw("<li class='parent lazy-show not-showed' id='" + id + "'>")
                                    }
                                }
                                <div class="post__author author vcard inline-items @commentParent.Degree">
                                    <a href="Profile?username=@commentParent.UserName&option=newsfeed">
                                        <img src="content/images/@commentParent.Avatar" alt="author">
                                    </a>

                                    <div class="author-date">
                                        <a href="Profile?username=@commentParent.UserName&option=newsfeed" class="h6 post__author-name fn" href="#">@commentParent.Name</a>
                                        <div class="post__date">
                                            <time class="published" data-time="@commentParent.DateComment">
                                            </time>
                                        </div>
                                    </div>

                                    <div class="more">
                                        <svg class="olymp-three-dots-icon"><use xlink:href="content/icons/icons.svg#olymp-three-dots-icon"></use></svg>
                                        <div class="more-dropdown">
                                            <a href="#" data-toggle="modal" data-target="#report">Báo cáo xấu</a>
                                        </div>
                                    </div>
                                </div>

                                <p>
                                    @commentParent.Content
                                </p>
                                if (commentParent.Vote == 1)
                                {
                                    <a href="#" class="post-add-icon inline-items upvote clicked active">
                                        <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                        <span>@commentParent.UpVote</span>
                                    </a>
                                    <a href="#" class="post-add-icon inline-items downvote ">
                                        <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                        <span>@commentParent.DownVote</span>
                                    </a>
                                }
                                else if (commentParent.Vote == -1)
                                {
                                    <a href="#" class="post-add-icon inline-items upvote">
                                        <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                        <span>@commentParent.UpVote</span>
                                    </a>
                                    <a href="#" class="post-add-icon inline-items downvote clicked active">
                                        <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                        <span>@commentParent.DownVote</span>
                                    </a>
                                }
                                else
                                {
                                    <a href="#" class="post-add-icon inline-items upvote">
                                        <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                        <span>@commentParent.UpVote</span>
                                    </a>
                                    <a href="#" class="post-add-icon inline-items downvote">
                                        <svg class="olymp-stats-arrow"><use xlink:href="content/icons/icons.svg#olymp-stats-arrow"></use></svg>
                                        <span>@commentParent.DownVote</span>
                                    </a>
                                }

                                <a class="reply">Trả lời</a>

                                if (Model.User.Id == Model.Id_User)
                                {
                                    <div class="control-block-button post-control-button">
                                        <a class="btn btn-control mark-answer" data-toggle="tooltip" data-placement="bottom" data-original-title="Chấp nhận">
                                            <svg class="olymp-star-icon"><use xlink:href="content/icons/icons.svg#olymp-star-icon"></use></svg>
                                        </a>
                                    </div>
                                }

                                <ul class="children">
                                    @if (commentParent.listChildComment.Count != 0)
                                    {
                                        foreach (var childComment in commentParent.listChildComment)
                                        {
                                            <li class="showed">
                                                <div class="post__author author vcard inline-items @childComment.Degree">
                                                    <a href="Profile?username=@childComment.UserName&option=newsfeed">
                                                        <img src="content/images/@childComment.Avatar" alt="author">
                                                    </a>

                                                    <div class="author-date">
                                                        <a href="Profile?username=@childComment.UserName&option=newsfeed" class="h6 post__author-name fn">@childComment.Name</a>
                                                        <div class="post__date">
                                                            <time class="published" data-time="@childComment.DateComment">
                                                            </time>
                                                        </div>
                                                    </div>

                                                    <div class="more">
                                                        <svg class="olymp-three-dots-icon"><use xlink:href="content/icons/icons.svg#olymp-three-dots-icon"></use></svg>
                                                        <div class="more-dropdown">
                                                            <a href="#" data-toggle="modal" data-target="#report">Báo cáo xấu</a>
                                                        </div>
                                                    </div>

                                                </div>

                                                <p style=" margin-bottom: 0; ">@childComment.Content</p>

                                            </li>

                                        }
                                    }
                                </ul>
                                @Html.Raw("</li>")
                            }
                        </ul>

                        @if (Model.listComment.Count > 2)
                        {
                            <div class="more-comments">Xem thêm bình luận <span>+</span></div>
                        }

                        <form class="comment-form inline-items">
                            <div class="post__author author vcard inline-items @Model.User.Degree">
                                <a href="Profile?username=@Model.User.UserName&option=newsfeed">
                                    <img src="content/images/@Model.User.Avatar" alt="author">
                                </a>
                            </div>

                            <div class="form-group with-icon-right ">
                                <textarea class="form-control" placeholder="Trả lời nào..." id="comment" name="Content"></textarea>
                                <div class="add-options-message">
                                    <a class="options-message" id="submit">
                                        <svg class="olymp-speech-balloon-icon"><use xlink:href="content/icons/icons.svg#olymp-speech-balloon-icon"></use></svg>
                                    </a>
                                </div>
                                <span class="material-input"></span>
                                <input type="hidden" name="Id_User" value="@Model.User.Id" />
                                <input type="hidden" name="Id_Post" value="@Model.Id" />
                                <input type="hidden" name="Id_Comment" value="0" />
                                <input type="hidden" name="Comment" value="0" />
                                <input type="hidden" name="DateComment" value="" />
                            </div>

                        </form>

                    </div>

                </div>

            </div>

        </main>

        <!-- ... end Main Content -->
        @Html.Partial("_Activities")

        <!-- Window-popup Report -->

        <div class="modal fade" id="report">
            <div class="modal-dialog ui-block window-popup edit-widget edit-widget-twitter">
                <a href="#" class="close icon-close" data-dismiss="modal" aria-label="Close">
                    <svg class="olymp-close-icon"><use xlink:href="content/icons/icons.svg#olymp-close-icon"></use></svg>
                </a>

                <div class="ui-block-title">
                    <h6 class="title">Bài đăng này có nội dung xấu hay không phù hợp?</h6>
                </div>

                <div class="ui-block-content">
                    <fieldset class="form-group label-floating is-select">
                        <label class="control-label">Bài đăng này đã vi phạm vì</label>
                        <select class="selectpicker form-control" size="auto">
                            <option value="1">Nội dung xấu, kích động</option>
                            <option value="2">Chứa từ ngữ xấu, không phù hợp</option>
                        </select>
                    </fieldset>

                    <p>
                        Olympus cảm ơn bạn rất nhiều!
                    </p>
                    <p>
                        <b>Make Olympus great againt!</b>
                    </p>
                    <div class="modal-button">
                        <a href="#" class="btn btn-secondary btn-lg btn--half-width btn-icon-center" data-dismiss="modal" aria-label="Close">Thôi, tha</a>
                        <a href="#" class="btn btn-primary btn-lg btn--half-width btn-icon-center">Xóa dùm</a>
                    </div>
                </div>

            </div>
        </div>

        <!-- ... end Window-popup Report -->

    </div>
</div>

<script>
    $(document).on("click", "#submit.options-message.active", function () {
        var parent = $(this).parent().parent().parent();
        var comment_section = parent.parent().find(".comments-list");
        var textarea = $(this).parent().parent().find("textarea#comment");
        var total = parent.parent().parent().find(".comments-shared span:last-child");
        var comment = textarea.val();
        var button = $(this);
        var form = $(this).closest("form");
        var total_comment = parseInt(total.text());
        total_comment++;
        $(form).find("input[name='Comment']").val(total_comment);
        $(form).find("input[name='DateComment']").val(Date.now);
        var new_comment;
        if (comment.length != 0) {
            if (!$(this).hasClass("child-comment")) {
                var data = form.serialize();
                $.post("/Post/Comment", data).done(function (html) {
                    $(comment_section).append(html);
                    textarea.val("");
                    button.removeClass("active");
                    new_comment = $(comment_section).find("li.new-comment");
                    $(comment_section).find("li.new-comment").show('slow').addClass("showed");
                }).fail(function (response) {
                    $("#notify .ui-block-content p").html("Thành thật xin lỗi. <br/>Hình như có lỗi gì đó rồi, thử lại sau nhé!!!");
                    $("#notify-button").click();
                    total_comment--;
                })
            }
            else {
                var index = $(this).attr("class").match(/(?:\s|^)child-comment-(\d+)/)[1];
                var parentcomment_section = $(comment_section).find("li.parent")[index];
                var childcomment_section = $(parentcomment_section).find("ul.children");
                var parentcomment_section_id = $(parentcomment_section).attr("id");
                $(form).find("input[name='Id_Comment']").val(parentcomment_section_id.substr(parentcomment_section_id.lastIndexOf("-") + 1));
                var data = form.serialize();
                $.post("/Post/Comment", data).done(function (html) {
                    $(childcomment_section).append(html);
                    textarea.val("");
                    new_comment = $(comment_section).find("li.new-comment");
                    button.removeClass("active").removeClass(function (index, className) {
                        return (className.match(/(^|\s)child-comment-\S+/g) || []).join(' ');
                    }).removeClass("child-comment");
                    $(childcomment_section).find("li.new-comment").show('slow').addClass("showed");
                    $(form).find("input[name='Id_Comment']").val("");
                    scrollto(parentcomment_section);
                }).fail(function (response) {
                    $("#notify .ui-block-content p").html("Thành thật xin lỗi. <br/>Hình như có lỗi gì đó rồi, thử lại sau nhé!!!");
                    $("#notify-button").click();
                    total_comment--;
                })
            }
            total.text(total_comment);
        }
    });

    $(".comments-list li.parent:nth-child(1)").removeClass("not-showed").addClass("showed");
    $(".comments-list li.parent:nth-child(2)").removeClass("not-showed").addClass("showed");

    $(document).on("click", ".post-add-icon.upvote", function () {
        var button = $(this);
        var id_comment = 0;
        var vote, upvote, downvote;
        if (button.parent().attr("id") != null) {
            id_comment = button.parent().attr("id").substr($(button).parent().attr("id").lastIndexOf("-") + 1)
        }
        if ($(button).hasClass("clicked")) {
            vote = 0;
            upvote = -1;
        }
        else {
            if ($(button).next().hasClass("clicked")) {
                downvote = -1;
            }
            upvote = 1;
            vote = 1;
        }
        var data = { Id_User: '@Model.User.Id', Id_Post: '@Model.Id', Id_Comment: id_comment, Vote: vote, UpVote: upvote, DownVote: downvote };
        $.post("/Post/VotePost", data).done(function (response) {
            if (response.result == "success") {
                var upvote = $(button).find("span");
                var number_upvote = parseInt(upvote.text());
                var downvote = $(button).next().find("span");
                var number_downvote = parseInt(downvote.text());
                if ($(button).hasClass("clicked")) {
                    $(button).removeClass("clicked");
                    number_upvote--;
                    $(button).removeClass("active");
                }
                else {
                    if ($(button).next().hasClass("clicked")) {
                        $(button).next().removeClass("clicked");
                        number_downvote--;
                        $(button).next().removeClass("active");
                    }
                    $(button).addClass("clicked");
                    number_upvote++;
                    $(button).addClass("active");
                    $(button).next().removeClass("active");
                }

                if (number_upvote < 0) {
                    number_upvote = 0;
                }
                if (number_downvote < 0) {
                    number_downvote = 0;
                }
                upvote.text(number_upvote);
                downvote.text(number_downvote);

                if (number_upvote > number_downvote) {
                    $(button).parent().next().find('.upvote').addClass("clicked");
                    $(button).parent().next().find('.downvote').removeClass("clicked");
                }
                else {
                    $(button).parent().next().find('.upvote').removeClass("clicked");
                    $(button).parent().next().find('.downvote').addClass("clicked");
                }
                scrollto(button.parent());
            }
            else {
                $("#notify .ui-block-content p").html("Thành thật xin lỗi. <br/>Hình như có lỗi gì đó rồi, thử lại sau nhé!!!");
                $("#notify-button").click();
            }
        }).fail(function (response) {
            $("#notify .ui-block-content p").html("Thành thật xin lỗi. <br/>Hình như có lỗi gì đó rồi, thử lại sau nhé!!!");
            $("#notify-button").click();
        })
    })

    $(document).on("click", ".post-add-icon.downvote", function () {
        var button = $(this);
        var id_comment = 0;
        var vote, upvote, downvote;
        if (button.parent().attr("id") != null) {
            id_comment = button.parent().attr("id").substr($(button).parent().attr("id").lastIndexOf("-") + 1)
        }
        if ($(button).hasClass("clicked")) {
            vote = 0;
            downvote = -1;
        }
        else {
            if ($(button).prev().hasClass("clicked")) {
                upvote = -1;
            }
            vote = -1;
            downvote = 1;
        }
        var data = { Id_User: '@Model.User.Id', Id_Post: '@Model.Id', Id_Comment: id_comment, Vote: vote, UpVote: upvote, DownVote: downvote };
        $.post("/Post/VotePost", data).done(function (response) {
            if (response.result == "success") {
                var downvote = $(button).find("span");
                var number_downvote = parseInt(downvote.text());
                var upvote = $(button).prev().find("span");
                var number_upvote = parseInt(upvote.text());

                if ($(button).hasClass("clicked")) {
                    $(button).removeClass("clicked");
                    number_downvote--;
                    $(button).removeClass("active");
                }
                else {
                    if ($(button).prev().hasClass("clicked")) {
                        $(button).prev().removeClass("clicked");
                        number_upvote--;
                        $(button).prev().removeClass("active");
                    }
                    $(button).addClass("clicked");
                    number_downvote++;
                    $(button).addClass("active");
                    $(button).prev().removeClass("active");
                }

                if (number_upvote < 0) {
                    number_upvote = 0;
                }
                if (number_downvote < 0) {
                    number_downvote = 0;
                }
                upvote.text(number_upvote);
                downvote.text(number_downvote);

                if (number_downvote > number_upvote) {
                    $(button).parent().next().find('.downvote').addClass("clicked");
                    $(button).parent().next().find('.upvote').removeClass("clicked");
                }
                else {
                    $(button).parent().next().find('.downvote').removeClass("clicked");
                    $(button).parent().next().find('.upvote').addClass("clicked");
                }
                scrollto(button.parent());
            }
            else {
                $("#notify .ui-block-content p").html("Thành thật xin lỗi. <br/>Hình như có lỗi gì đó rồi, thử lại sau nhé!!!");
                $("#notify-button").click();
            }
        }).fail(function (response) {
            $("#notify .ui-block-content p").html("Thành thật xin lỗi. <br/>Hình như có lỗi gì đó rồi, thử lại sau nhé!!!");
            $("#notify-button").click();
        })
    });
    $(document).on("click", ".mark-answer", function () {
        var button = $(this);
        var id_comment = button.closest("li").attr("id").substr($(button).closest("li").attr("id").lastIndexOf("-") + 1)
        var data = { Id_User: '@Model.User.Id', Id_Post: '@Model.Id', Id_Comment: id_comment, Corrected: true };
        $(".mark-answer").closest("li").not(button).removeClass("answer");
        button.closest("li").addClass("answer");
        $.post("/Post/MarkAnswer", data).done(function (response) {
            if (response.result == "success") {
                if (button.closest("li").attr("id") != response.answer) {
                    $(".mark-answer").closest("li").removeClass("answer");
                    $("#" + response.answer).addClass("answer");
                }
            }
            else {
                $("#notify .ui-block-content p").html("Thành thật xin lỗi. <br/>Hình như có lỗi gì đó rồi, thử lại sau nhé!!!");
                $("#notify-button").click();
            }
        }).fail(function (response) {
            $("#notify .ui-block-content p").html("Thành thật xin lỗi. <br/>Hình như có lỗi gì đó rồi, thử lại sau nhé!!!");
            $("#notify-button").click();
        })
    })
</script>